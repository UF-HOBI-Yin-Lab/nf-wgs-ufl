/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    HaKmonkey/nf-wgs-ufl Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

params {
    // AWS or local
    aws                  = false

    // Pipeline type
    germline             = false
    cat_reads            = false
    align                = false
    vcf                  = false
    multiqc              = false
    report               = false
    cnv_controls         = false
    exome                = false
    test = false

    // Lane number
    one                  = false
    two                  = false
    four                 = false
    match                = null

    // Read information
    reads1               = null
    reads2               = null
    reads3               = null
    reads4               = null


    // General parameters
    bucket               = null
    run_id               = null
    run_dir              = "${params.bucket}/Pipeline_Output/${params.run_id}"
    ref_dir              = "${params.bucket}/Pipeline/Reference"
    trim_adapters        = "${params.ref_dir}/trim/NEBNext.fa"
    reference            = "${params.ref_dir}/hs37d5/hs37d5.fa.gz"
    bwa_amb              = "${params.reference}.amb"
    bwa_ann              = "${params.reference}.ann"
    bwa_bwt              = "${params.reference}.bwt"
    bwa_pac              = "${params.reference}.pac"
    bwa_sa               = "${params.reference}.sa"
    ref_fai              = "${params.reference}.fai"
    ref_gzi              = "${params.reference}.gzi"
    hs37d5_genes         = "${params.ref_dir}/hs37d5/hs37d5_genes.bed"
    cnv_control          = "${params.ref_dir}/cnv/wgs_cnv_controls.RData"
    cnv_vcf_header       = "${params.ref_dir}/cnv/cnv_vcf_header.tsv"
    bait                 = "${params.ref_dir}/exome_targets/bait.interval_list"
    target               = "${params.ref_dir}/exome_targets/target.interval_list"
    variant_catalog      = "${params.ref_dir}/expansion_hunter/variant_catalog.json"
    ehd_controls         = "${params.ref_dir}/expansion_hunter_denovo"


    // Reporting parameters
    reporting_dir        = "${params.bucket}/Pipeline/Reporting"
    panel_dir            = "${params.ref_dir}/panels"
    panel_reporting_list = null

}

if ( params.aws ) {
    includeConfig 'conf/aws.config'
} else {
    includeConfig 'conf/local.config'
}

if ( params.one ) {
    if ( params.exome ){
        params.reads1 = "${params.bucket}/Exome_Fastqs/${params.run_id}*${params.match}"
    }
    else{
        params.reads1 = "${params.bucket}/Fastqs/${params.run_id}*${params.match}"
    }
}
else if ( params.two ) {
    if ( params.exome ){
        params.reads1 = "${params.bucket}/Exome_Fastqs/${params.run_id}*_L001_{R1,R2}_001.fastq.gz"
        params.reads2 = "${params.bucket}/Exome_Fastqs/${params.run_id}*_L002_{R1,R2}_001.fastq.gz"
    }
    else {
        params.reads1 = "${params.bucket}/Fastqs/${params.run_id}*_L001_{R1,R2}_001.fastq.gz"
        params.reads2 = "${params.bucket}/Fastqs/${params.run_id}*_L002_{R1,R2}_001.fastq.gz"
    }
}
else if ( params.four ) {
    if ( params.exome ){
        params.reads1 = "${params.bucket}/Exome_Fastqs/${params.run_id}*_L001_{R1,R2}_001.fastq.gz"
        params.reads2 = "${params.bucket}/Exome_Fastqs/${params.run_id}*_L002_{R1,R2}_001.fastq.gz"
        params.reads3 = "${params.bucket}/Exome_Fastqs/${params.run_id}*_L003_{R1,R2}_001.fastq.gz"
        params.reads4 = "${params.bucket}/Exome_Fastqs/${params.run_id}*_L004_{R1,R2}_001.fastq.gz"
    }
    else {
        params.reads1 = "${params.bucket}/Fastqs/${params.run_id}*_L001_{R1,R2}_001.fastq.gz"
        params.reads2 = "${params.bucket}/Fastqs/${params.run_id}*_L002_{R1,R2}_001.fastq.gz"
        params.reads3 = "${params.bucket}/Fastqs/${params.run_id}*_L003_{R1,R2}_001.fastq.gz"
        params.reads4 = "${params.bucket}/Fastqs/${params.run_id}*_L004_{R1,R2}_001.fastq.gz"
    }
}

docker {
    enabled = true
}

timeline {
    enabled = true
}

trace {
    enabled = true
    fields = 'process,tag,status,container,cpus,disk,memory,attempt,submit,start,complete,realtime,%cpu,%mem'
}

manifest {
    name        = 'HaKmonkey/nf-wgs-ufl'
    author      = 'Johnny Bravo'
    homePage    = 'https://github.com/HaKmonkey/nf-wgs-ufl'
    description = 'germline pipeline and some tertiary analysis'
    version     = '1.0.0'
}

